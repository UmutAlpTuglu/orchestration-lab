# in github set DOCKERHUB_REGISTRY, DOCKERHUB_TOKEN, DOCKERHUB_USERNAME, NASA_API, SERVER_IP, SERVER_USER, SSH_PRIVATE_KEY
# trigger this pipeline by pushing tag to repository via git tag <tagname>, git push origin --tags

on:
  push:
    tags:
      - '*'

name: Deploy to docker hub

env:
  APP_NAME: nasa-app

jobs:
  get_tag:
    runs-on: ubuntu-latest
    outputs:
      release_version: ${{ steps.get_tag.outputs.tag_name }}
    steps:
      - name: Get tag name
        id: get_tag
        run: echo "tag_name=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

  build-test-and-push:
    needs: get_tag
    runs-on: ubuntu-latest
    
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Print tag name
        run: echo "RELEASE_VERSION=${{ needs.get_tag.outputs.release_version }}" >> $GITHUB_ENV

      - name: 'Debug Print'
        run: echo tag version is ${{ env.RELEASE_VERSION }}

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build image 
        run: docker build -t ${{ env.APP_NAME }} -f nasa.Dockerfile .
      - name: Tag image
        run: docker tag ${{ env.APP_NAME }} ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REGISTRY }}:${{ env.RELEASE_VERSION }}
      - name: Push image
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REGISTRY }}:${{ env.RELEASE_VERSION }}

      - name: SSH and Docker pull
        uses:  appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REGISTRY }}:${{ env.RELEASE_VERSION }}
            docker stop ${{ env.APP_NAME }} || true && docker rm ${{ env.APP_NAME }} || true
            docker run -d -e API_KEY="${{ secrets.NASA_API }}" --name ${{ env.APP_NAME }} ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REGISTRY }}:${{ env.RELEASE_VERSION }}